---
# tasks install "Docker"
- name: == YUM == Uninstall old versions
  yum: name={{ item }} state=absent
  with_items:
   - docker
   - docker-common
   - container-selinux
   - docker-selinux
   - docker-engine
  ignore_errors: True

- name: == YUM == Install Docker utility
  yum: name={{ item }} state=latest
  with_items:
   - yum-utils
   - device-mapper-persistent-data
   - lvm2
   
- name: add Docker repository
    yum_repository:
      name: Docker_CE_Stable
      description: Docker repo
      baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
      gpgcheck: yes
      enabled: yes
      gpgkey: "https://download.docker.com/linux/centos/gpg"
    
- name: == YUM == Install Docker
  yum: name={{ item }} state=latest
  with_items:
   - docker

- name: == Service Start - Enable == start Docker
  service:
    name: docker
    state: started
    enabled: yes
    
# tasks install "Kubectl" last version or specific version if defined in ansible hosts variable

- name: Clean old kubectl file if already present
  file:
    state: absent
    path: /usr/local/bin/kubectl
    
- name: check "kubctl" stable version
  get_url: 
    url: https://storage.googleapis.com/kubernetes-release/release/stable.txt
    dest: /tmp/stable.txt
  when: kubectl_version is undefined
  
- name: return stable.txt to registered var
  command: cat /tmp/stable.txt
  register: version_stdout
  when: kubectl_version is undefined
  
- name: Set Kubernetes Version if defined in hosts var 
  set_fact:
    version: "{{ kubectl_version }}"
  when: kubectl_version is defined

- name: Set Kubernetes Version last stable
  set_fact:
    version: "{{ version_stdout.stdout }}"
  when: kubectl_version is undefined

- name: download kubctl and make executable in folder  /usr/local/bin/
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ version }}/bin/linux/amd64/kubectl
    dest: /usr/local/bin/kubectl
    force_basic_auth: yes
    mode: 0750
    
# tasks Add "Kubectl" bash comletion environment
- name: Export env var for Kubernetes
  lineinfile:
    dest=/root/.bashrc 
    line="source <(kubectl completion bash)"
    state=present
    insertafter=EOF
    create=True
    
# tasks Installing kubelet and kubeadm
- name: Install Kubernetes Repository
  yum_repository:
    name: Kubernetes
    description: Kubernetes repo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: yes
    enabled: yes
    gpgcakey: "https://packages.cloud.google.com/yum/doc/yum-key.gpg"
    gpgkey: "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
    
- name: == YUM == Install kubelet kubeadm kubernetes-cni
  yum: name={{ item }} state=latest
  with_items:
   - kubelet
   - kubeadm
   - kubernetes-cni

- name: == Service Start - Enable == start kubelet
  service:
    name: kubelet
    state: started
    enabled: yes
