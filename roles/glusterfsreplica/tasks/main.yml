---
#Tasks configure "GlusterFS" replica
  
# Gluster volume configuration.
- name: Check if Gluster volumes already exist.
  shell: "gluster volume info"
  changed_when: false
  register: gluster_volume_info


- name: Create a replicated Glusterfs volume
  shell: gluster volume create glustervol1 replica 3 transport tcp {{ edge1gfs }}:/bricks/brick1/brick {{ edge2gfs }}:/bricks/brick1/brick {{ edge3gfs }}:/bricks/brick1/brick
  register: task_result

- debug:
        var: task_result.stdout_lines


  - shell: gluster volume start glustervol1
  - shell: gluster volume info





  - name: Connect to Gluster peers.
  shell: "gluster peer probe {{ item }}"
  register: gluster_peer_probe
  changed_when: "'already in peer list' not in gluster_peer_probe.stdout"
  failed_when: false
  with_items: groups.webservers
  when: "'Volume Name: gluster' not in gluster_volume_info.stdout"

- name: Create Gluster volume.
  shell: "gluster volume create {{ gluster_brick_name }} {{ gluster_brick_config }}"
  register: gluster_volume_create
  changed_when: "'successful' in gluster_volume_create.stdout"
  when: "inventory_hostname == groups.webservers[0] and 'Volume Name: gluster' not in gluster_volume_info.stdout"

- name: Ensure Gluster volume is started.
  shell: "gluster volume start {{ gluster_brick_name }}"
  register: gluster_volume_start
  changed_when: "'successful' in gluster_volume_start.stdout"
  when: "inventory_hostname == groups.webservers[0] and 'Volume Name: gluster' not in gluster_volume_info.stdout"

# Mount configuration.
- name: Ensure the Gluster volume is mounted.
  mount:
    name: "{{ gluster_mount_dir }}"
    src: "{{ groups.webservers[0] }}:/{{ gluster_brick_name }}"
    fstype: glusterfs
    opts: "defaults,_netdev"
    state: mounted