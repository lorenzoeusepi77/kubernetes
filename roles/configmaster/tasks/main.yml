# Cluster inizialization on Master Node with kubeadm
---

#Master node cluster init
- name: Delete existing kubernetes conf file
  command: rm -f $HOME/admin.conf
    
- name: Reset existing kubernetes installation
  command: kubeadm reset
  ignore_errors: true
  
- name: Read token from file
  include_vars: /cfg/{{ clustername }}/token.yml
  
- name: Save master_ip_address
  shell: echo "master_ip_address{{ ':' }} {{ master_ip_address }}" > /cfg/{{ clustername }}/master_ip_address.yml
  delegate_to: 127.0.0.1
  become: false
      
- name: Initialize master
  command: kubeadm init --token {{ admission_token }}
  args:
  register: master_init
  ignore_errors: true
      
- name: Copy admin file on user $HOME
  command: cp /etc/kubernetes/admin.conf $HOME/
            
- name: Export env var for Kubernetes
  lineinfile:
    dest=/root/.bashrc 
    line="export KUBECONFIG=/root/admin.conf"
    state=present
    insertafter=EOF
    create=True

# Add CNI network weave-kube
- name: Install pod network "weave-kube 1.6"
  command: /usr/bin/kubectl --kubeconfig /etc/{{ clustername }}/admin.conf apply -f https://git.io/weave-kube-1.6
  register: pod_network
  ignore_errors: true

- debug:
    var: pod_network.stdout_lines

- pause:
    seconds: 5

- name: Wait for Master Node to be ready 1
  shell: "/usr/bin/kubectl --kubeconfig /etc/{{ clustername }}/admin.conf get nodes"
  register: task_result
  until: result.stdout.find("Ready") != -1
  retries: 30
  delay: 10
  ignore_errors: true    

- debug:
    var: result.stdout_lines   

# Wait for Kube-DNS running
- name: Wait for Kube-DNS pod running 1
  shell: "/usr/bin/kubectl --kubeconfig /etc/{{ clustername }}/admin.conf get pods --all-namespaces | grep kube-dns"
  register: result
  until: result.stdout.find("Running") != -1
  retries: 30
  delay: 15
  ignore_errors: true          

- debug:
    var: result.stdout_lines        